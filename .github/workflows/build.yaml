name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      
      - name: Cache tox environments
        uses: actions/cache@v3
        with:
          path: .tox
          key: tox-linting-${{ hashFiles('tox.ini','poetry.lock') }}
      
      - name: Cache pre-commit environments
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-linting-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run tox
        run: tox -e linting
    
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      
      - name: Cache tox environments
        uses: actions/cache@v3
        with:
          path: .tox
          key: tox-test-${{ matrix.python-version }}-${{ hashFiles('tox.ini','poetry.lock') }}

      - name: Run tox
        run: tox
  
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox

      - name: Run tox
        run: tox -e coverage
